{
	"name": "SP Creation for Data Load",
	"properties": {
		"content": {
			"query": "GO\nIF OBJECT_ID('[dbo].[UpsertLnkClaimProcedureDetails]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[UpsertLnkClaimProcedureDetails]\nGO\nCREATE PROC [dbo].[UpsertLnkClaimProcedureDetails] AS\nBEGIN\n\nUpdate\n\tld\nSET\n  ClaimFormDetailId= ld.ClaimFormDetailId\n, CptCodeId= ld.CptCodeId\n, Billed= ld.Billed\n, Net= ld.Net\n, NoofServices= ld.NoofServices\n, PlaceofServiceId= ld.PlaceofServiceId\n, Amount= ld.Amount\n, ParentServiceProcedureId= ld.ParentServiceProcedureId\n, GrossAmount= ld.GrossAmount\n, ServiceStartDate= ld.ServiceStartDate\n, ServiceEndDate= ld.ServiceEndDate\n, BilledGross= ld.BilledGross\n, ServiceNet= ld.ServiceNet\nFROM Load.ClaimProcedureDetails ld\nINNER JOIN dbo.LnkClaimProcedureDetails  lcd ON ld.ClaimProcedureId = lcd.ClaimProcedureId\n\nINSERT INTO dbo.LnkClaimProcedureDetails\n(\n\tClaimProcedureId\n,\tClaimFormDetailId\n,\tCptCodeId\n,\tBilled\n,\tNet\n,\tNoofServices\n,\tPlaceofServiceId\n,\tAmount\n,\tParentServiceProcedureId\n,\tGrossAmount\n,\tServiceStartDate\n,\tServiceEndDate\n,\tBilledGross\n,\tServiceNet\n)\nSELECT\n\tld.ClaimProcedureId\n,\tld.ClaimFormDetailId\n,\tld.CptCodeId\n,\tld.Billed\n,\tld.Net\n,\tld.NoofServices\n,\tld.PlaceofServiceId\n,\tld.Amount\n,\tld.ParentServiceProcedureId\n,\tld.GrossAmount\n,\tld.ServiceStartDate\n,\tld.ServiceEndDate\n,\tld.BilledGross\n,\tld.ServiceNet\nFROM Load.ClaimProcedureDetails ld\nLEFT JOIN dbo.LnkClaimProcedureDetails  lcd ON ld.ClaimProcedureId = lcd.ClaimProcedureId\nWHERE lcd.ClaimProcedureId IS NULL\n\nEND\n\nGO\nIF OBJECT_ID('[dbo].[FAMS_AverageLOS]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[FAMS_AverageLOS]\nGO\nCREATE PROC [dbo].[FAMS_AverageLOS] AS \nBEGIN\n\tDECLARE\n\t\t@FraudParameterId\tINT\n\t,\t@FraudScore\t\t\tINT\n\n\tSELECT \n\t\t@FraudParameterId = F.FraudParameterId\n\t,\t@FraudScore = F.FraudScore\n\n\tFROM FraudParameters F WHERE F.FraudParameterCode =  'Avg LOS >= 4 days'\n\n\tCREATE TABLE #Temp\n\t(\n\t\tClaimFormDetailId\tINT\n\t,\tHospitalId\t\t\tINT\n\t,\tHospitalName\t\tVARCHAR(150)\n\t,\tDateAdmit\t\t\tDATETIME\n\t,\tDateDischarge\t\tDATETIME\n\t,\tLengthofStay\t\tDECIMAL(19,2)\n\t)\n\n\tINSERT INTO #Temp \n\tSELECT \n\t\tC.ClaimFormDetailId\n\t,\tP.HospitalId\n\t,\tP.HospitalName\n\t,\tC.DateofAdmit\n\t,\tC.DateofDischarge\n\t,\tDATEDIFF(Day,C.DateofAdmit,C.DateofDischarge) AS LengthofStay\n\n\tFROM FactClaimDetails C\n\tINNER JOIN DimHospitalDetails P ON C.HospitalId = P.HospitalId\n\t \n\t\tDELETE L FROM dbo.LnkClaimFraudParameter L WHERE L.FraudParameterId = @FraudParameterId\n\n\t\tINSERT INTO dbo.LnkClaimFraudParameter\n\t\t(\n\t\t\tClaimFormDetailId\n\t\t,\tFraudParameterId\n\t\t,\tFraudScore\n\t\t)\n\t\tSELECT \n\t\t\tT.ClaimFormDetailId \n\t\t,\t@FraudParameterId\n\t\t,\t@FraudScore\n\n\t\tFROM #Temp T \n\t\tINNER JOIN \n\t\t(\n\t\t\tSELECT T.HospitalId  \n\t\t\tFROM #Temp T\t\t\t\n\t\t\tGROUP BY\n\t\t\t\tT.HospitalId\n\t\t\tHAVING \n\t\t\t\tAVG(T.lengthofStay) >= 4\n\t\t) AS B ON T.HospitalId = B.HospitalId\n\n\t\tDROP TABLE #Temp\n\n\t\tEND\nGO\nIF OBJECT_ID('[stage].[spExecuteDetectFraud]', 'P') IS NOT NULL\n    DROP PROCEDURE [stage].[spExecuteDetectFraud]\nGO\n\nCREATE PROC [stage].[spExecuteDetectFraud] AS\nBEGIN\n\nTRUNCATE TABLE stage.ClaimsFraudSummarystage\n\nINSERT INTO stage.ClaimsFraudSummarystage\n\nSELECT \n      [ClaimFIRNo]\n      ,[ClaimType]\n      ,[HospitalizationType]\n      ,[ClassofAccommodation]\n      ,[Procedure]\n      ,[Diagnosis]\n      ,[policyNo]\n      ,[PolicyType]\n      ,[member_code]\n      ,[FullMemberName]\n      ,[Gender]\n      ,[Age]\n      ,[Hospital]\n      ,[Corporate]\n      ,[LengthofStay]\n      ,[output_label1] IsFraudClaim\n      ,[FraudScore]\n      ,[ClaimAmount]\n      ,[ClaimDate] \nFROM PREDICT (MODEL = (SELECT [model] FROM dbo.[ClaimsMLModelExt] WHERE [ID] = 'sampesynapseworkspace-claimsfraudmldata-20210507054541-Best:1'),\n              DATA = [stage].[ClaimsSummary],\n              RUNTIME = ONNX) WITH ([output_label1] [varchar])\n\nEND\nGO\nIF OBJECT_ID('[dbo].[spExecuteDetectFraud]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[spExecuteDetectFraud]\nGO\n\nCREATE PROC [dbo].[spExecuteDetectFraud] AS\nBEGIN\n\nTRUNCATE TABLE [Report].ClaimsFraudSummaryData\n\nINSERT INTO [Report].ClaimsFraudSummaryData\nSELECT \n      [ClaimFIRNo]\n      ,[ClaimType]\n      ,[HospitalizationType]\n      ,[ClassofAccommodation]\n      ,[Procedure]\n      ,[Diagnosis]\n      ,[policyNo]\n      ,[PolicyType]\n      ,[member_code]\n      ,[FullMemberName]\n      ,[Gender]\n      ,[Age]\n      ,[Hospital]\n      ,[Corporate]\n      ,[LengthofStay]\n      ,[output_label1] IsFraudClaim\n      ,[FraudScore]\n      ,[ClaimAmount]\n      ,[ClaimDate] \nFROM PREDICT (MODEL = (SELECT [model] FROM dbo.[ClaimsMLModelExt] WHERE [ID] = 'sampesynapseworkspace-claimsfraudmldata-20210507054541-Best:1'),\n              DATA = [dbo].[ClaimsSummary],\n              RUNTIME = ONNX) WITH ([output_label1] [varchar])\n\nEND\nGO\nIF OBJECT_ID('[dbo].[FAMSTrigger_Execute]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[FAMSTrigger_Execute]\nGO\nCREATE PROC [dbo].[FAMSTrigger_Execute] AS BEGIN\n\n\tEXEC dbo.FAMS_AverageLOS\n\n\tEXEC dbo.FAMS_GroupPolicyGreaterThan10Percent\n\n\tEXEC dbo.FAMS_InsurerandHospitalCityMismatch\n\n\tEXEC dbo.FAMS_GroupPolicyGreaterThan10PercentforaProcedure\n\nEND\n\nGO\nIF OBJECT_ID('[dbo].[FAMS_InsurerandHospitalCityMismatch]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[FAMS_InsurerandHospitalCityMismatch]\nGO\nCREATE PROC [dbo].[FAMS_InsurerandHospitalCityMismatch] AS BEGIN\n\n\tDECLARE\n\t\t@FraudParameterId\tINT\n\t,\t@FraudScore\t\t\tINT\n\n\tSELECT \n\t\t@FraudParameterId = F.FraudParameterId\n\t,\t@FraudScore = F.FraudScore\n\n\tFROM FraudParameters F WHERE F.FraudParameterCode =  'Ins&Hosp City mismatch'\n\n\tDELETE L FROM dbo.LnkClaimFraudParameter L WHERE L.FraudParameterId = @FraudParameterId\n\n\tINSERT INTO dbo.LnkClaimFraudParameter\n\t(\n\t\tClaimFormDetailId\n\t,\tFraudParameterId\n\t,\tFraudScore\n\t)\n\tSELECT \n\t\tC.Claimformdetailid \n\t,\t@FraudParameterId\n\t,\t@FraudScore\n\n\tFROM FactClaimDetails C\n\tINNER JOIN DimMemberDetails MD ON MD.member_detail_id = C.memberdetailid\n\tINNER JOIN DimHospitalDetails P ON C.HospitalId = P.HospitalId\t \t\t\n\tWHERE\n\t\tMD.City NOT IN ('GURGAON','DELHI','MUMBAI','KOLKATA') AND\n\t\tISNULL(P.ProviderCity,'') <> ISNULL(MD.City,'')\n\n \t \nEND\n\nGO\nIF OBJECT_ID('[dbo].[UpsertDimHospitalDetails]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[UpsertDimHospitalDetails]\nGO\nCREATE PROC [dbo].[UpsertDimHospitalDetails] AS\nBEGIN\n\nUPDATE\nld\nSET\n HospitalCode= ld.HospitalCode\n, HospitalName= ld.HospitalName\n, IsSpecialist= ld.IsSpecialist\n, IsReferringProvider= ld.IsReferringProvider\n, ProviderTypeId= ld.ProviderTypeId\n, ProviderCity= ld.ProviderCity\n, ProviderState= ld.ProviderState\n, ProviderCountry= ld.ProviderCountry\nFROM Load.HospitalDetails ld\nINNER JOIN dbo.DimHospitalDetails dh ON ld.HospitalId = dh.HospitalId\n\nInsert INTO dbo.DimHospitalDetails\n(\n\tHospitalId\n,\tHospitalCode\n,\tHospitalName\n,\tIsSpecialist\n,\tIsReferringProvider\n,\tProviderTypeId\n,\tProviderCity\n,\tProviderState\n,\tProviderCountry\n)\nSELECT\n\tld.HospitalId\n,\tld.HospitalCode\n,\tld.HospitalName\n,\tld.IsSpecialist\n,\tld.IsReferringProvider\n,\tld.ProviderTypeId\n,\tld.ProviderCity\n,\tld.ProviderState\n,\tld.ProviderCountry\nFROM Load.HospitalDetails ld\nLEFT JOIN dbo.DimHospitalDetails dh ON ld.HospitalId = dh.HospitalId\nWHERE dh.HospitalId IS NULL\n\nEND \n\nGO\nIF OBJECT_ID('[dbo].[UpsertLnkClaimDiagnosisCodes]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[UpsertLnkClaimDiagnosisCodes]\nGO\nCREATE PROC [dbo].[UpsertLnkClaimDiagnosisCodes] AS\nBEGIN\n\nUPDATE diag SET ClaimDiagnosisId = diagStage.ClaimDiagnosisId,\nClaimFormDetailId= diagStage.ClaimFormDetailId,\nIcdCodeId= diagStage.IcdCodeId\nFROM\nLnkClaimDiagnosisCodes diag\nJOIN\nLoad.LnkClaimDiagnosisCodes diagStage ON\ndiag.ClaimDiagnosisId = diagStage.ClaimDiagnosisId\n\ninsert into dbo.LnkClaimDiagnosisCodes (ClaimDiagnosisId,ClaimFormDetailId,IcdCodeId)\nSELECT diagStage.ClaimDiagnosisId, \ndiagStage.ClaimFormDetailId, \ndiagStage.IcdCodeId\nFROM\nLoad.LnkClaimDiagnosisCodes diagStage \nLEFT JOIN \nLnkClaimDiagnosisCodes diag ON diag.ClaimDiagnosisId = diagStage.ClaimDiagnosisId\nWHERE diag.IcdCodeId IS NULL\n\n\n\nEND\n\nGO\nIF OBJECT_ID('[dbo].[UpsertDimMembers]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[UpsertDimMembers]\nGO\nCREATE PROC [dbo].[UpsertDimMembers] AS\nBEGIN\n\nUpdate \nld\nSET\n  member_code= ld.member_code\n, first_name= ld.first_name\n, last_name= ld.last_name\n, date_birth= ld.date_birth\n, sex= ld.sex\n, subscriber_id= ld.subscriber_id\n, user_id= ld.user_id\n, FullMemberName= ld.FullMemberName\n, SequenceNo= ld.SequenceNo\nFROM\nLoad.Members ld\nINNER JOIN dbo.DimMembers dm on ld.member_id = dm.member_id\n\nInsert INTO dbo.DimMembers\n(\n\tmember_id\n,\tmember_code\n,\tfirst_name\n,\tlast_name\n,\tdate_birth\n,\tsex\n,\tsubscriber_id\n,\tuser_id\n,\tFullMemberName\n,\tSequenceNo\n)\nSELECT\n\tld.member_id\n,\tld.member_code\n,\tld.first_name\n,\tld.last_name\n,\tld.date_birth\n,\tld.sex\n,\tld.subscriber_id\n,\tld.user_id\n,\tld.FullMemberName\n,\tld.SequenceNo\nFROM\nLoad.Members ld\nLEFT JOIN dbo.DimMembers dm on ld.member_id = dm.member_id\nWHERE dm.member_id IS NULL\n\nEND\n\nGO\nIF OBJECT_ID('[dbo].[UpsertDimProcedureCodes]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[UpsertDimProcedureCodes]\nGO\nCREATE PROC [dbo].[UpsertDimProcedureCodes] AS\nBEGIN\n\nUpdate \nld\nSET\n  CptCode= ld.CptCode\n, CptDescription= ld.CptDescription\n, ProcedureCategoryId= ld.ProcedureCategoryId\nFROM Load.ProcedureCodes ld\nINNER JOIN dbo.DimProcedureCodes dp ON ld.CptCodeId = dp.CptCodeId\n\nINSERT INTO dbo.DimProcedureCodes\n(\n\tCptCodeId\n,\tCptCode\n,\tCptDescription\n,\tProcedureCategoryId\n)\nSELECT\n\tld.CptCodeId\n,\tld.CptCode\n,\tld.CptDescription\n,\tld.ProcedureCategoryId\nFROM Load.ProcedureCodes ld\nLEFT JOIN dbo.DimProcedureCodes dp ON ld.CptCodeId = dp.CptCodeId\nWHERE dp.CptCodeId IS NULL\n\nEND\n\nGO\nIF OBJECT_ID('[dbo].[UpsertClaimDetails]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[UpsertClaimDetails]\nGO\nCREATE PROC [dbo].[UpsertClaimDetails] AS\nBEGIN\n\nUPDATE claim SET \n\tclaim.ClaimFIRNo\t=\tclaimstage.ClaimFIRNo\n,\tclaim.Injury\t=\tclaimstage.Injury\n,\tclaim.ClaimType\t=\tclaimstage.ClaimType\n,\tclaim.ClaimCategory\t=\tclaimstage.ClaimCategory\n,\tclaim.AmountBilled\t=\tclaimstage.AmountBilled\n,\tclaim.AmountNet\t=\tclaimstage.AmountNet\n,\tclaim.AmountPaid\t=\tclaimstage.AmountPaid\n,\tclaim.DoctorName\t=\tclaimstage.DoctorName\n,\tclaim.DoctorCity\t=\tclaimstage.DoctorCity\n,\tclaim.ClaimFormDetailId\t=\tclaimstage.ClaimFormDetailId\n,\tclaim.IntimationId\t=\tclaimstage.IntimationId\n,\tclaim.HospitalId\t=\tclaimstage.HospitalId\n,\tclaim.ClaimStatusId\t=\tclaimstage.ClaimStatusId\n,\tclaim.PlaceofServiceId\t=\tclaimstage.PlaceofServiceId\n,\tclaim.DateofService\t=\tclaimstage.DateofService\n,\tclaim.DatePaid\t=\tclaimstage.DatePaid\n,\tclaim.DateReceived\t=\tclaimstage.DateReceived\n,\tclaim.DateofAdmit\t=\tclaimstage.DateofAdmit\n,\tclaim.DateofInjury\t=\tclaimstage.DateofInjury\n,\tclaim.DateofDocumentation\t=\tclaimstage.DateofDocumentation\n,\tclaim.DateofDischarge\t=\tclaimstage.DateofDischarge\n,\tclaim.DateModified\t=\tclaimstage.DateModified\n,\tclaim.WorkflowSequenceId\t=\tclaimstage.WorkflowSequenceId\n,\tclaim.MemberDetailId\t=\tclaimstage.MemberDetailId\n,\tclaim.ClassofAccommodation\t=\tclaimstage.ClassofAccommodation\n,\tclaim.HospitalizationType\t=\tclaimstage.HospitalizationType\n,\tclaim.Corporate\t=\tclaimstage.Corporate \nFROM\ndbo.FactClaimDetails claim\nJOIN\nLoad.ClaimDetails claimstage ON\nclaim.ClaimId = claimstage.ClaimId\n\ninsert into FactClaimDetails (ClaimFIRNo,Injury,ClaimType,ClaimCategory,AmountBilled,AmountNet,AmountPaid,DoctorName,DoctorCity,ClaimFormDetailId,IntimationId,HospitalId,ClaimStatusId,PlaceofServiceId,DateofService,DatePaid,DateReceived,DateofAdmit,DateofInjury,DateofDocumentation,DateofDischarge,DateModified,WorkflowSequenceId,MemberDetailId,\nClassofAccommodation,HospitalizationType,Corporate,ClaimId)\nSELECT \n\tclaimstage.ClaimFIRNo\n,\tclaimstage.Injury\n,\tclaimstage.ClaimType\n,\tclaimstage.ClaimCategory\n,\tclaimstage.AmountBilled\n,\tclaimstage.AmountNet\n,\tclaimstage.AmountPaid\n,\tclaimstage.DoctorName\n,\tclaimstage.DoctorCity\n,\tclaimstage.ClaimFormDetailId\n,\tclaimstage.IntimationId\n,\tclaimstage.HospitalId\n,\tclaimstage.ClaimStatusId\n,\tclaimstage.PlaceofServiceId\n,\tclaimstage.DateofService\n,\tclaimstage.DatePaid\n,\tclaimstage.DateReceived\n,\tclaimstage.DateofAdmit\n,\tclaimstage.DateofInjury\n,\tclaimstage.DateofDocumentation\n,\tclaimstage.DateofDischarge\n,\tclaimstage.DateModified\n,\tclaimstage.WorkflowSequenceId\n,\tclaimstage.MemberDetailId\n,\tclaimstage.ClassofAccommodation\n,\tclaimstage.HospitalizationType\n,\tclaimstage.Corporate\n,\tclaimstage.ClaimId \nFROM\n[Load].ClaimDetails claimstage \nLEFT JOIN \nFactClaimDetails claim ON claimstage.ClaimId = claim.ClaimId\nWHERE claim.ClaimId IS NULL\n\n\n\nEND\n\nGO\nIF OBJECT_ID('[dbo].[FAMS_GroupPolicyGreaterThan10Percent]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[FAMS_GroupPolicyGreaterThan10Percent]\nGO\nCREATE PROC [dbo].[FAMS_GroupPolicyGreaterThan10Percent] AS BEGIN\n\n\tDECLARE\n\t\t@FraudParameterId\tINT\n\t,\t@FraudScore\t\t\tINT\n\n\tSELECT \n\t\t@FraudParameterId = F.FraudParameterId\n\t,\t@FraudScore = F.FraudScore\n\n\tFROM FraudParameters F WHERE F.FraudParameterCode =  'Group policy Claims is more than 10%'\n \n\tCREATE TABLE #GroupHospitalClaims\n\t(\n\t\tEmployerId\t\t\tINT\n\t,\tHospitalId\t\t\tINT\n\t,\tNoofClaim\t\t\tINT\n\t,\tTotalNoofClaims\t\tINT\n\t,\tClaimsPercent\t\tDECIMAL(19,2)\n\t)\n\n\tINSERT INTO #GroupHospitalClaims (EmployerId, HospitalId, NoofClaim)\n\tSELECT \n\t\tE.employerid\n\t,\tP.HospitalId\n\t,\tCOUNT(C.claimformdetailid)\n\n\tFROM FactClaimDetails C\n\tINNER JOIN DimMemberDetails MD ON MD.member_detail_id = C.memberdetailid\n\tINNER JOIN DimEmployers E ON E.employerid = MD.employer_id \n\tINNER JOIN DimHospitalDetails P ON C.HospitalId = P.HospitalId\t \t\t\n\tWHERE\n\t\tISNULL(MD.Employer_Id,0) <> 0 \n\tGROUP BY\n\t\tE.employerid\n\t,\tP.HospitalId\n \n\n\tUPDATE G\n\tSET G.TotalNoofClaims = A.TotalNoofClaims\n\tFROM #GroupHospitalClaims G\n\tINNER JOIN \n\t(\n\tSELECT G.employerid, SUM(G.NoofClaim) As TotalNoofClaims \n\tFROM #GroupHospitalClaims G \n\tGROUP BY\n\t\tG.employerid\n\t)AS A ON A.EmployeriD = G.EmployerID\n\n\tUPDATE G\n\tSET G.ClaimsPercent = (CONVERT(DECIMAL(19,2),G.Noofclaim)/CONVERT(DECIMAL(19,2),G.TotalNoofClaims))*100 \n\tFROM #GroupHospitalClaims G\n\n\tDELETE L FROM dbo.LnkClaimFraudParameter L WHERE L.FraudParameterId = @FraudParameterId\n\n\tINSERT INTO dbo.LnkClaimFraudParameter\n\t(\n\t\tClaimFormDetailId\n\t,\tFraudParameterId\n\t,\tFraudScore\n\t)\n\tSELECT \n\t\tC.Claimformdetailid \n\t,\t@FraudParameterId\n\t,\t@FraudScore\n\n\tFROM FactClaimDetails C \n\tINNER JOIN DimMemberDetails MD ON MD.member_detail_id = C.memberdetailid\n\tINNER JOIN DimEmployers E ON E.employerid = MD.employer_id \n\tINNER JOIN DimHospitalDetails P ON C.HospitalId = P.HospitalId\n\tINNER JOIN #GroupHospitalClaims G ON G.HospitalId = P.Hospitalid AND  G.EmployerID = MD.Employer_Id\n\tWHERE \n\t\tG.ClaimsPercent >= 10\n\t\t \n\t\t \n\tDROP TABLE #GroupHospitalClaims\n\nEND\n\nGO\nIF OBJECT_ID('[dbo].[UpsertDimEmployers]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[UpsertDimEmployers]\nGO\nCREATE PROC [dbo].[UpsertDimEmployers] AS\nBEGIN\nUpdate\nld\nSET\n  EmployerCode= ld.EmployerCode\n, EmployerName= ld.EmployerName\n, EmployerDetailid= ld.EmployerDetailid\n, EmpCity= ld.EmpCity\n, EmpState= ld.EmpState\n, EmpZipcode= ld.EmpZipcode\n, EmpEmail= ld.EmpEmail\n, PremiumNet= ld.PremiumNet\n, PremiumGross= ld.PremiumGross\n, Premiumtax= ld.Premiumtax\n, NoOfLives= ld.NoOfLives\n, policyFromDate= ld.policyFromDate\n, policyToDate= ld.policyToDate\n, Agent= ld.Agent\n, PolicyNo= ld.PolicyNo\n, PolicyId= ld.PolicyId\n, BankName= ld.BankName\n, BankAccNo= ld.BankAccNo\n, BankCity= ld.BankCity\n, BankState= ld.BankState\nFROM Load.Employers ld\nINNER JOIN dbo.DimEmployers de ON ld.EmployerId = de.EmployerId\n\nInsert INTO dbo.DimEmployers \n(\n\tEmployerId\n,\tEmployerCode\n,\tEmployerName\n,\tEmployerDetailid\n,\tEmpCity\n,\tEmpState\n,\tEmpZipcode\n,\tEmpEmail\n,\tPremiumNet\n,\tPremiumGross\n,\tPremiumtax\n,\tNoOfLives\n,\tpolicyFromDate\n,\tpolicyToDate\n,\tAgent\n,\tPolicyNo\n,\tPolicyId\n,\tBankName\n,\tBankAccNo\n,\tBankCity\n,\tBankState\n)\nSELECT\n\tld.EmployerId\n,\tld.EmployerCode\n,\tld.EmployerName\n,\tld.EmployerDetailid\n,\tld.EmpCity\n,\tld.EmpState\n,\tld.EmpZipcode\n,\tld.EmpEmail\n,\tld.PremiumNet\n,\tld.PremiumGross\n,\tld.Premiumtax\n,\tld.NoOfLives\n,\tld.policyFromDate\n,\tld.policyToDate\n,\tld.Agent\n,\tld.PolicyNo\n,\tld.PolicyId\n,\tld.BankName\n,\tld.BankAccNo\n,\tld.BankCity\n,\tld.BankState\nFROM Load.Employers ld\nLEFT JOIN dbo.DimEmployers de ON ld.EmployerId = de.EmployerId\nWHERE de.EmployerId is null\n\nEND\n\nGO\nIF OBJECT_ID('[dbo].[UpsertDimProcedureCategories]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[UpsertDimProcedureCategories]\nGO\nCREATE PROC [dbo].[UpsertDimProcedureCategories] AS\nBEGIN\n\nUpdate \nld\nSET\n  ProcedureCategoryCode= ld.ProcedureCategoryCode\n, ProcedureCategoryDesc= ld.ProcedureCategoryDesc\nFROM\nLoad.ProcedureCategories ld\nINNEr JOIN dbo.DimProcedureCategories dp ON ld.ProcedureCategoryId = dp.ProcedureCategoryId\n\nINSERT INTO dbo.DimProcedureCategories\n(\n\tProcedureCategoryId\n,\tProcedureCategoryCode\n,\tProcedureCategoryDesc\n)\nSELECT\n\tld.ProcedureCategoryId\n,\tld.ProcedureCategoryCode\n,\tld.ProcedureCategoryDesc\nFROM\nLoad.ProcedureCategories ld\nLEFT JOIN dbo.DimProcedureCategories dp ON ld.ProcedureCategoryId = dp.ProcedureCategoryId\nWHERE dp.ProcedureCategoryId IS NULL\n\nEND\n\nGO\nIF OBJECT_ID('[dbo].[UpsertDiagnosisCodes]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[UpsertDiagnosisCodes]\nGO\nCREATE PROC [dbo].[UpsertDiagnosisCodes] AS\nBEGIN\n\nUPDATE icd SET IcdCodeId = icdStage.IcdCodeId,\nIcdCode= icdStage.IcdCode,\nIcdDescription= icdStage.IcdDescription\nFROM\nDimDiagnosisCodes icd\nJOIN\nLoad.DiagnosisCodes icdStage ON\nicd.IcdCodeId = icdStage.IcdCodeId\n\ninsert into DimDiagnosisCodes (IcdCodeId,IcdCode,IcdDescription)\nSELECT icdStage.IcdCodeId, \nicdStage.IcdCode, \nicdStage.IcdDescription\nFROM\nLoad.DiagnosisCodes icdStage \nLEFT JOIN \nDimDiagnosisCodes icd ON icd.IcdCodeId = icdStage.IcdCodeId\nWHERE icd.IcdCodeId IS NULL\nEND\n\nGO\nIF OBJECT_ID('[dbo].[UpsertDimMemberDetails]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[UpsertDimMemberDetails]\nGO\nCREATE PROC [dbo].[UpsertDimMemberDetails] AS\nBEGIN\n\nUpdate \nld\nSET\n  member_id= ld.member_id\n, start_effective_date= ld.start_effective_date\n, end_effective_date= ld.end_effective_date\n, location_id= ld.location_id\n, employer_id= ld.employer_id\n, product_type_id= ld.product_type_id\n, city= ld.city\n, state= ld.state\n, zip_code= ld.zip_code\n, email= ld.email\n, MobileNo= ld.MobileNo\n, PanNo= ld.PanNo\n, DrivingNo= ld.DrivingNo\n, VoterID= ld.VoterID\n, Ration_Card= ld.Ration_Card\n, member_code_tmp= ld.member_code_tmp\n, is_missing= ld.is_missing\n, AccountNo= ld.AccountNo\n, Bank_Name= ld.Bank_Name\n, Bank_Branch= ld.Bank_Branch\n, Branch_Code= ld.Branch_Code\n, Designation= ld.Designation\n, Department= ld.Department\n, Policytype= ld.Policytype\n, ProductID= ld.ProductID\n, policyNo= ld.policyNo\n, SumInsured= ld.SumInsured\n, Cummulative= ld.Cummulative\n, Premium= ld.Premium\n, Renewal= ld.Renewal\n, Subscriber_Detail_id= ld.Subscriber_Detail_id\n, RelationshipID= ld.RelationshipID\n, Plan_id= ld.Plan_id\n, SumInsuredper= ld.SumInsuredper\n, CardPer= ld.CardPer\n, Employee_No= ld.Employee_No\n, Bloodgroup= ld.Bloodgroup\n, SalaryGrade= ld.SalaryGrade\n, CoInsurance= ld.CoInsurance\n, agentcode= ld.agentcode\n, member_insurer_id= ld.member_insurer_id\n, country= ld.country\n, district= ld.district\n, workflow_current_sequence_id= ld.workflow_current_sequence_id\n, policy_from_date= ld.policy_from_date\n, policy_to_date= ld.policy_to_date\n, Contract_Id= ld.Contract_Id\n, DateCreated= ld.DateCreated\n, covered_from_date= ld.covered_from_date\n, End_Ren_Date= ld.End_Ren_Date\n, endorsement_no= ld.endorsement_no\n, Endorsement_Date= ld.Endorsement_Date\n, Parent_Member_detail_id= ld.Parent_Member_detail_id\n, MemberCreatedDate= ld.MemberCreatedDate\n, ModifiedDate= ld.ModifiedDate\nFROM Load.MemberDetails ld\nINNER JOIN dbo.DimMemberDetails dm ON ld.member_detail_id = dm.member_detail_id\n\nInsert INTO dbo.DimMemberDetails\n(\n\tmember_detail_id\n,\tmember_id\n,\tstart_effective_date\n,\tend_effective_date\n,\tlocation_id\n,\temployer_id\n,\tproduct_type_id\n,\tcity\n,\tstate\n,\tzip_code\n,\temail\n,\tMobileNo\n,\tPanNo\n,\tDrivingNo\n,\tVoterID\n,\tRation_Card\n,\tmember_code_tmp\n,\tis_missing\n,\tAccountNo\n,\tBank_Name\n,\tBank_Branch\n,\tBranch_Code\n,\tDesignation\n,\tDepartment\n,\tPolicytype\n,\tProductID\n,\tpolicyNo\n,\tSumInsured\n,\tCummulative\n,\tPremium\n,\tRenewal\n,\tSubscriber_Detail_id\n,\tRelationshipID\n,\tPlan_id\n,\tSumInsuredper\n,\tCardPer\n,\tEmployee_No\n,\tBloodgroup\n,\tSalaryGrade\n,\tCoInsurance\n,\tagentcode\n,\tmember_insurer_id\n,\tcountry\n,\tdistrict\n,\tworkflow_current_sequence_id\n,\tpolicy_from_date\n,\tpolicy_to_date\n,\tContract_Id\n,\tDateCreated\n,\tcovered_from_date\n,\tEnd_Ren_Date\n,\tendorsement_no\n,\tEndorsement_Date\n,\tParent_Member_detail_id\n,\tMemberCreatedDate\n,\tModifiedDate\n)\nSELECT\n\tld.member_detail_id\n,\tld.member_id\n,\tld.start_effective_date\n,\tld.end_effective_date\n,\tld.location_id\n,\tld.employer_id\n,\tld.product_type_id\n,\tld.city\n,\tld.state\n,\tld.zip_code\n,\tld.email\n,\tld.MobileNo\n,\tld.PanNo\n,\tld.DrivingNo\n,\tld.VoterID\n,\tld.Ration_Card\n,\tld.member_code_tmp\n,\tld.is_missing\n,\tld.AccountNo\n,\tld.Bank_Name\n,\tld.Bank_Branch\n,\tld.Branch_Code\n,\tld.Designation\n,\tld.Department\n,\tld.Policytype\n,\tld.ProductID\n,\tld.policyNo\n,\tld.SumInsured\n,\tld.Cummulative\n,\tld.Premium\n,\tld.Renewal\n,\tld.Subscriber_Detail_id\n,\tld.RelationshipID\n,\tld.Plan_id\n,\tld.SumInsuredper\n,\tld.CardPer\n,\tld.Employee_No\n,\tld.Bloodgroup\n,\tld.SalaryGrade\n,\tld.CoInsurance\n,\tld.agentcode\n,\tld.member_insurer_id\n,\tld.country\n,\tld.district\n,\tld.workflow_current_sequence_id\n,\tld.policy_from_date\n,\tld.policy_to_date\n,\tld.Contract_Id\n,\tld.DateCreated\n,\tld.covered_from_date\n,\tld.End_Ren_Date\n,\tld.endorsement_no\n,\tld.Endorsement_Date\n,\tld.Parent_Member_detail_id\n,\tld.MemberCreatedDate\n,\tld.ModifiedDate\nFROM Load.MemberDetails ld\nLEFT JOIN dbo.DimMemberDetails dm ON ld.member_detail_id = dm.member_detail_id\nWHERE dm.member_detail_id IS NULL\n\nEND \n\nGO\nIF OBJECT_ID('[dbo].[FAMS_GroupPolicyGreaterThan10PercentforaProcedure]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[FAMS_GroupPolicyGreaterThan10PercentforaProcedure]\nGO\nCREATE PROC [dbo].[FAMS_GroupPolicyGreaterThan10PercentforaProcedure] AS BEGIN\n\n\tDECLARE\n\t\t@FraudParameterId\tINT\n\t,\t@FraudScore\t\t\tINT\n\n\tSELECT \n\t\t@FraudParameterId = F.FraudParameterId\n\t,\t@FraudScore = F.FraudScore\n\n\tFROM FraudParameters F WHERE F.FraudParameterCode =  'Claims for a Proc >= 10%'\n \n\tCREATE TABLE #GroupHospitalClaims\n\t(\n\t\tEmployerId\t\t\tINT\n\t,\tProcedureId\t\t\tINT\n\t,\tNoofClaim\t\t\tINT\n\t,\tTotalNoofClaims\t\tINT\n\t,\tClaimsPercent\t\tDECIMAL(19,2)\n\t)\n\n\tINSERT INTO #GroupHospitalClaims (EmployerId, ProcedureId, NoofClaim)\n\tSELECT \n\t\tE.employerid\n\t,\tP.CptCodeId\n\t,\tCOUNT(C.claimformdetailid)\n\n\tFROM FactClaimDetails C\n\tINNER JOIN DimMemberDetails MD ON MD.member_detail_id = C.memberdetailid\n\tINNER JOIN DimEmployers E ON E.employerid = MD.employer_id \n\tINNER JOIN LnkClaimProcedureDetails L ON L.claimformdetailid = C.claimformdetailid\n\tINNER JOIN DIMProcedureCodes P ON P.CptCodeId = L.CptCodeId\n\tINNER JOIN DimProcedureCategories PC ON PC.ProcedureCategoryId = P.ProcedureCategoryId\n\tWHERE\n\t\tISNULL(MD.Employer_Id,0) <> 0 AND\n\t\tPC.ProcedureCategoryCode = 'P'\n\tGROUP BY\n\t\tE.employerid\n\t,\tP.CptCodeId\n \n\n\tUPDATE G\n\tSET G.TotalNoofClaims = A.TotalNoofClaims\n\tFROM #GroupHospitalClaims G\n\tINNER JOIN \n\t(\n\tSELECT G.employerid, SUM(G.NoofClaim) As TotalNoofClaims \n\tFROM #GroupHospitalClaims G \n\tGROUP BY\n\t\tG.employerid\n\t)AS A ON A.EmployeriD = G.EmployerID\n\n\tUPDATE G\n\tSET G.ClaimsPercent = (CONVERT(DECIMAL(19,2),G.Noofclaim)/CONVERT(DECIMAL(19,2),G.TotalNoofClaims))*100 \n\tFROM #GroupHospitalClaims G\n\t \n\tDELETE L FROM dbo.LnkClaimFraudParameter L WHERE L.FraudParameterId = @FraudParameterId\n\n\tINSERT INTO dbo.LnkClaimFraudParameter\n\t(\n\t\tClaimFormDetailId\n\t,\tFraudParameterId\n\t,\tFraudScore\n\t)\n\tSELECT \n\t\tC.Claimformdetailid \n\t,\t@FraudParameterId\n\t,\t@FraudScore\n\n\tFROM FactClaimDetails C \n\tINNER JOIN DimMemberDetails MD ON MD.member_detail_id = C.memberdetailid\n\tINNER JOIN DimEmployers E ON E.employerid = MD.employer_id \n\tINNER JOIN LnkClaimProcedureDetails L ON L.claimformdetailid = C.claimformdetailid\n\tINNER JOIN DIMProcedureCodes P ON P.CptCodeId = L.CptCodeId\n\tINNER JOIN DimProcedureCategories PC ON PC.ProcedureCategoryId = P.ProcedureCategoryId\n\tINNER JOIN #GroupHospitalClaims G ON G.ProcedureId = P.CptCodeId AND  G.EmployerID = MD.Employer_Id\n\tWHERE \n\t\tG.ClaimsPercent >= 10 AND\n\t\tPC.ProcedureCategoryCode = 'P'\n\t\t \n\t\t \n\tDROP TABLE #GroupHospitalClaims\n\nEND\n\nGO\nIF OBJECT_ID('[dbo].[InsFactClaimDetailsExternalTPA]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[InsFactClaimDetailsExternalTPA]\nGO\nCREATE PROC [dbo].[InsFactClaimDetailsExternalTPA] AS \nBEGIN\n\n\tDECLARE \n\t\t@MaxMemberId\t\t\tINT \n\t,\t@MaxMemberDetailId\t\tINT\n\t,\t@MaxFactClaimDetailId\tINT\n\t,\t@ClaimType\t\t\t\tVARCHAR(50) = 'Reimbursement'\n\t\t\n\tSELECT @MaxMemberId = MAX(D.Member_Id) FROM DimMembers D WHERE D.IsExternalTPA = 1\n\tSELECT @MaxMemberDetailId = MAX(D.Member_Detail_Id) FROM DimMemberDetails D WHERE D.IsExternalTPA = 1\n\tSELECT @MaxFactClaimDetailId = MAX(D.MemberDetailId) FROM FactClaimDetails D WHERE D.IsExternalTPAClaim = 1\n\n\n\tSELECT @MaxMemberId = CASE WHEN @MaxMemberId IS NULL THEN 100000 ELSE @MaxMemberId+1 END\n\tSELECT @MaxMemberDetailId = CASE WHEN @MaxMemberDetailId IS NULL THEN 1000000 ELSE @MaxMemberDetailId+1 END\n\tSELECT @MaxFactClaimDetailId = CASE WHEN @MaxFactClaimDetailId IS NULL THEN 1000000 ELSE @MaxFactClaimDetailId+1 END\n\t\t\n\t\t\n\tDECLARE @s NVARCHAR(4000);\n\n\t\tset @s = N'\n\t\t\t   \n\t\tCREATE TABLE #DimMembers\n\t\t(\n\t\t\tMember_id\t\tINT IDENTITY('+CONVERT(NVARCHAR,@MaxMemberId)+',1)\n\t\t,\tMember_Code\t\tVARCHAR(200)\n\t\t,\tFirst_Name\t\tVARCHAR(200)\n\t\t,\tDate_Birth\t\tDATETIME\n\t\t,\tFullMemberName\tVARCHAR(200)\n\t\t)\n\t\t\n\t\tINSERT INTO #DimMembers\n\t\t(\n\t\t\tMember_Code\n\t\t,\tFirst_Name\n\t\t,\tDate_Birth\n\t\t,\tFullMemberName\n\t\t)\n\t\tSELECT DISTINCT\n\t\t\n\t\t\tE.Member_ID\n\t\t,\tE.INSURED_NAME\n\t\t,\tDATEADD(yy,-CONVERT(INT,E.Age),GETDATE())\t \n\t\t,\tE.INSURED_NAME\t\n\n\t\tFROM load.ExternalTPAData E\n\t\tLEFT OUTER JOIN DimMembers M ON M.Member_Code = E.Member_ID AND M.IsExternalTPA = 1\n\t\tWHERE\n\t\t\tM.Member_Code IS NULL\n\t\t\t\n\t\tINSERT INTO DimMembers\n\t\t(\t\n\t\t\tMember_Id\n\t\t,\tMember_Code\n\t\t,\tFirst_Name\n\t\t,\tDate_Birth\n\t\t,\tFullMemberName\n\t\t,\tIsExternalTPA\n\t\t)\n\t\tSELECT \n\t\t\tMember_Id\n\t\t,\tMember_Code\n\t\t,\tFirst_Name\n\t\t,\tDate_Birth\n\t\t,\tFullMemberName\n\t\t,\t1\n\n\t\tFROM #DimMembers\t\n\n\t\tCREATE TABLE #DimMemberDetails\n\t\t(\n\t\t\tMember_Detail_id\t\tINT IDENTITY('+CONVERT(NVARCHAR,@MaxMemberDetailId)+',1)\n\t\t,\tMember_Id\t\t\t\tINT\n\t\t,\tStart_effective_date\tDATETIME\n\t\t,\tEnd_effective_Date\t\tDATETIME\n\t\t,\tEmployer_id\t\t\t\tINT\n\t\t,\tProductTypeId\t\t\tINT\n\t\t,\tCity\t\t\t\t\tVARCHAR(200)\n\t\t,\tState\t\t\t\t\tVARCHAR(200)\n\t\t,\tMember_code_tmp\t\t\tVARCHAR(200)\n\t\t,\tAccountNo\t\t\t\tVARCHAR(200)\n\t\t,\tBank_Code\t\t\t\tVARCHAR(200)\n\t\t,\tPolicyType\t\t\t\tVARCHAR(200)\n\t\t,\tProductId\t\t\t\tINT\n\t\t,\tPolicyNo\t\t\t\tVARCHAR(200)\n\t\t,\tSumInsured\t\t\t\tDECIMAL(19,2)\n\t\t,\tPremium\t\t\t\t\tDECIMAL(19,2)\n\t\t,\tRelationId\t\t\t\tINT\n\t\t,\tPlanId\t\t\t\t\tINT\n\t\t,\tEmployeeNo\t\t\t\tVARCHAR(200)\n\t\t,\tMember_insurer_Id\t\tINT\t\n\t\t,\tCountry\t\t\t\t\tINT\n\t\t,\tPolicy_from_date\t\tDATETIME\n\t\t,\tPolicy_to_date\t\t\tDATETIME\t\n\t\t,\tContractId\t\t\t\tINT\n\t\t)\n\t\t\n\t\tINSERT INTO #DimMemberDetails\n\t\t(\n\t\t\tMember_Id\n\t\t,\tStart_effective_date\n\t\t,\tEnd_effective_Date\n\t\t,\tEmployer_id\t\t \n\t\t,\tCity\n\t\t,\tState\n\t\t,\tMember_code_tmp\n\t\t,\tAccountNo\n\t\t,\tPolicyNo\n\t\t,\tRelationId\n\t\t,\tEmployeeNo\n\t\t,\tPolicy_from_date\n\t\t,\tPolicy_to_date\n\t\t)\n\t\tSELECT DISTINCT\n\t\t\tM.Member_Id\n\t\t,\tCONVERT(DATETIME,LEFT(E.[Policy_start_ date],10))\n\t\t,\tCONVERT(DATETIME,LEFT(E.Policy_end_date,10))\n\t\t,\tEm.EmployerId \n\t\t,\tE.[Payee City]\n\t\t,\tE.[Payee State]\n\t\t,\tE.[Member_ID]\n\t\t,\tE.PAYEE_ACCT\n\t\t,\tE.[POLICY_NO]\n\t\t,\tR.[RelationshipCode]\n\t\t,\tE.[Employee_No]\n\t\t,\tCONVERT(DATETIME,LEFT(E.[Policy_start_ date],10))\n\t\t,\tCONVERT(DATETIME,LEFT(E.[Policy_end_date],10))\n\t\t\t\n\t\tFROM Load.ExternalTPAData E\n\t\tINNER JOIN DimMembers M ON M.Member_Code = E.Member_ID AND M.IsExternalTPA = 1\n\t\tLEFT OUTER JOIN DimMemberDetails MD ON M.Member_Id = MD.Member_ID AND MD.PolicyNo = E.POLICY_NO AND MD.IsExternalTPA = 1\n\t\tLEFT OUTER JOIN DimEmployers Em ON Em.EmployerName = E.[Group name]\n\t\tINNER JOIN DIMRelationship R ON R.Description = E.[Consolidated Relation]\n\t\tWHERE\n\t\t\tMD.Member_detail_id IS NULL\n\n \t\t\n\t\tINSERT INTO DimMemberDetails\n\t\t(\n\t\t\tMember_detail_id\n\t\t,\tMember_Id\n\t\t,\tStart_effective_date\n\t\t,\tEnd_effective_Date\n\t\t,\tEmployer_id\t\t \n\t\t,\tCity\n\t\t,\tState\n\t\t,\tMember_code_tmp\n\t\t,\tAccountNo\n\t\t,\tPolicyNo\n\t\t,\tRelationshipID\n\t\t,\tEmployee_No\n\t\t,\tPolicy_from_date\n\t\t,\tPolicy_to_date\n\t\t,\tIsExternalTPA\n\t\t)\n\t\tSELECT DISTINCT\n\t\t\tMember_detail_id\n\t\t,\tMember_Id\n\t\t,\tStart_effective_date\n\t\t,\tEnd_effective_Date\n\t\t,\tEmployer_id\t\t \n\t\t,\tCity\n\t\t,\tState\n\t\t,\tMember_code_tmp\n\t\t,\tAccountNo\n\t\t,\tPolicyNo\n\t\t,\tRelationId\n\t\t,\tEmployeeNo\n\t\t,\tPolicy_from_date\n\t\t,\tPolicy_to_date\n\t\t,\t1\n\t\t\n\t\tFROM #DimMemberDetails MD\n\t\t \n\n\t\tCREATE TABLE #FactClaimDetails\n\t\t(\n\t\t\t[ClaimFormDetailId] [int] IDENTITY('+CONVERT(NVARCHAR,@MaxFactClaimDetailId)+',1) ,\n\t\t\t--[ClaimFormDetailId] [int] IDENTITY(1000000,1) ,\n\t\t\t[ClaimFIRNo] [varchar](50) NULL,\n\t\t\t[ClaimType] [bit] NULL,\n\t\t\t[AmountBilled] [money] NULL,\n\t\t\t[AmountNet] [money] NULL,\n\t\t\t[AmountPaid] [money] NULL,\n\t\t\t[HospitalId] [int] NULL,\n\t\t\t[ClaimStatusId] [int] NULL,\n\t\t\t[DatePaid] [datetime] NULL,\n\t\t\t--[DateReceived] [datetime] NULL,\n\t\t\t[DateofAdmit] [datetime] NULL,\n\t\t\t[DateofDocumentation] [datetime] NULL,\n\t\t\t[DateofDischarge] [datetime] NULL,\n\t\t\t[DateModified] [datetime] NULL,\n\t\t\t[MemberDetailId] [int] NULL,\n\t\t\t[Diagnosis]\t[varchar](200) NULL, \n\t\t\t[Procedure]\t[varchar](200) NULL,\n\t\t\t[Corporate] [varchar](100) NULL\n\t\t\t \n\t\t)\t\t\n\n\t\tINSERT INTO #factclaimdetails\n\t\t(\n\t\t  [ClaimFIRNo] \n\t\t, [ClaimType] \n\t\t, [AmountBilled] \n\t\t, [AmountNet] \n\t\t, [AmountPaid] \t\n\t\t, [HospitalId] \n\t\t, [DatePaid] \n\t\t--, [DateReceived]\n\t\t, [DateofAdmit] \t\n\t\t, [DateofDocumentation] \n\t\t, [DateofDischarge] \n\t\t, [DateModified] \n\t\t, [MemberDetailId] \n\t\t, [Corporate] \n\t\t, [Diagnosis]\n\t\t, [Procedure]\n\t\t \n\t\t)\n\t\t\t\t\n\n\t\tSELECT\n\t\n\t\t\tET.BILL_NO\t\t\t\t\t\t\tClaimFIRNo \t\n\t\t,\tCASE \n\t\t\t\tWHEN ET.Claim_Type = '+\t@ClaimType+' THEN 0 \n\t\t\t\tELSE 1 END\t\t\t\t\t\t \n\t\t,\tET.[Claimed Amount]\t\t\t\t\tAmountBilled\n\t\t,\tET.[Claimed Amount]\t\t\t\t\tAmountNet\n\t\t,\tET.[Transferred Amount]\t\t\t\tAmountPaid\n\t\t,\tH.HospitalId\t\t\t\t\t\tHospitalId\n\t\t,\tCONVERT(DATETIME,LEFT(ET.[Transferred Date],10))\t\t\t\tDatePaid\n\t\t--,\tCONVERT(DATETIME,LEFT(ET.[Transferred Date],10))\t\t\t\tDateReceived\n\t\t,\tCONVERT(DATETIME,LEFT(ET.[Loss_Date],10))\t\t\t\t\t\tDateofAdmin\n\t\t,\tCONVERT(DATETIME,LEFT(ET.[Date of last document received],10))\tDateofDocumentation\n\t\t,\tCONVERT(DATETIME,LEFT(ET.[Date of Discharge],10))\t\t\t\tDateofDischarge\n\t\t,\tCONVERT(DATETIME,LEFT(ET.[Date Modified],10))\t\t\t\t\tDateModified\n\t\t,\tMD.Member_Detail_id\t\t\t\t\tMemberDetailId\t\n\t\t,\tET.[Group name]\t\t\t\t\t\tCorporate\n\t\t,\tET.[Disease Description]\n\t\t,\tET.[Procedure Description]\n\t\t \n\t\n\t\tFROM load.EXTERNALTPADATA ET\n\t\tLEFT OUTER JOIN Factclaimdetails F ON ET.BILL_NO = F.ClaimFIRNo AND F.IsExternalTPAClaim = 1\n\t\tLEFT OUTER JOIN DimHospitalDetails H ON ET.[Provider Name] = H.HospitalName\n\t\tLEFT OUTER JOIN DimMembers M ON M.Member_code = ET.Member_ID AND M.[IsExternalTPA] = 1\n\t\tLEFT OUTER JOIN DimMemberDetails MD ON MD.member_Id = M.member_Id and MD.PolicyNo = ET.Policy_No AND MD.[IsExternalTPA] = 1\n\t\tWHERE\n\t\t\tF.Claimformdetailid IS NULL\n\n\t\tINSERT INTO factclaimdetails\n\t\t(\n\t\t  [ClaimFIRNo] \n\t\t, [ClaimType] \n\t\t, [AmountBilled] \n\t\t, [AmountNet] \n\t\t, [AmountPaid] \t\n\t\t, [HospitalId] \n\t\t, [DatePaid] \t\t \n\t\t, [DateofAdmit] \t\n\t\t, [DateofDocumentation] \n\t\t, [DateofDischarge] \n\t\t, [DateModified] \n\t\t, [MemberDetailId] \n\t\t, [Corporate] \n\t\t, [IsExternalTPAClaim]\n\t\t)\n\t\tSELECT \n\t\t \n\t\t  [ClaimFIRNo] \n\t\t, [ClaimType] \n\t\t, [AmountBilled] \n\t\t, [AmountNet] \n\t\t, [AmountPaid] \t\n\t\t, [HospitalId] \n\t\t, [DatePaid] \n\t  \n\t\t, [DateofAdmit] \t\n\t\t, [DateofDocumentation] \n\t\t, [DateofDischarge] \n\t\t, [DateModified] \n\t\t, [MemberDetailId] \n\t\t, [Corporate] \n\t\t, 1\n\t\t\n\t\tFROM #factclaimdetails\n\n\t\t\n\t\tINSERT INTO [dbo].[LnkClaimDiagnosisCodes]\n\t\t(\n\t\t\tIcdCodeId\n\t\t,\tClaimFormDetailId\n\t\t)\n\t\tSELECT \n\t\t\tD.IcdCodeId\n\t\t,\tF.ClaimFormDetailId\n\t\t \n\t\tFROM #FactClaimDetails F\n\t\tLEFT OUTER JOIN LnkClaimDiagnosisCodes L ON L.ClaimFormDetailId = F.ClaimformDetailId\n\t\tINNER JOIN dbo.DimDiagnosisCodes D ON D.IcdDescription = F.[Diagnosis]\n\t\tWHERE\n\t\t\tL.ClaimDiagnosisId IS NULL\n\n\n\t\tINSERT INTO [dbo].[LnkClaimProcedureDetails]\n\t\t(\n\t\t\tIcdCodeId\n\t\t,\tClaimFormDetailId\n\t\t)\n\t\tSELECT \n\t\t\tD.CptCodeId\n\t\t,\tF.ClaimFormDetailId\n\t\t  \n\t\tFROM #FactClaimDetails F\n\t\tLEFT OUTER JOIN LnkClaimProcedureDetails L ON L.ClaimFormDetailId = F.ClaimformDetailId\n\t\tINNER JOIN dbo.DimProcedureCodes D ON D.CptDescription = F.[Procedure]\n\t\tWHERE\n\t\t\tL.ClaimProcedureId IS NULL\n\t\t\n\t\tDROP TABLE #DimMembers\t\t\n\t\tDROP TABLE #DimMemberDetails\n\t\tDROP TABLE #factclaimdetails\n\t\t\t'\n\t\tEXEC (@s);\n\t\t\t\n\t\t \n\tEND\n\n\nGO\nIF OBJECT_ID('[dbo].[InsClaimsSummary]', 'P') IS NOT NULL\n    DROP PROCEDURE [dbo].[InsClaimsSummary]\nGO\nCREATE PROC [dbo].[InsClaimsSummary] AS\nBEGIN\n\n\n    DELETE CS FROM load.ClaimsSummary CS\n\n\n    INSERT INTO load.ClaimsSummary\n    (\n    \t[ClaimFIRNo]\n    ,\t[ClaimType]\n    ,\t[HospitalizationType]\n    ,\t[ClassofAccommodation]\n    ,\t[Procedure]\n    ,\t[Diagnosis]\n    ,\t[PolicyNo]\n    ,\t[PolicyType]\n    ,   [member_code]\n    ,\t[FullMemberName]\n    ,\t[Gender]\n    ,\t[Age]\n    ,\t[Hospital]\n    ,\t[Corporate]\n    ,\t[LengthofStay]\n    ,\t[IsFraudClaim]\n    ,\t[FraudScore]\n    ,\t[ClaimAmount]\n    ,\t[ClaimDate]\n    )\n    SELECT \n        C.ClaimFormDetailId AS 'Claim FIR No'\n    ,   CASE \n            WHEN C.ClaimType = 0 THEN 'Cashless'\n        ELSE 'Reimbursement' END AS 'Claim Type'\n    ,\tC.ClaimCategory AS 'Hospitalization Type'\n    ,\tC.ClassofAccommodation\n    ,\tCPT.CptDescription AS 'Procedure'\n    ,\tIcd.IcdDescription AS 'Diagnosis'\n    ,\tMDT.policyNo\n    ,\tCASE WHEN MDt.employer_id = 0 THEN 'Individual Policy' ELSE 'Group Policy' END AS 'Policy Type'\n    ,\tM.member_code\n    ,\tM.FullMemberName\n    ,\tCASE WHEN M.sex = 'F' THEN 'Female' ELSE 'Male' END AS 'Gender'\n    ,\tDATEDIFF(YEAR,M.date_birth, GETDATE()) AS 'Age'\n    ,\tP.HospitalName AS 'Hospital'\n    --,\tPN.ProviderNetworkType_Desc AS 'Provider Network Type'\n    ,   Emp.EmployerName AS 'Corporate'\n    ,\tDATEDIFF(DAY,C.DateofAdmit, C.DateofDischarge) AS 'Length of Stay'\n    ,\tCASE WHEN A.ClaimFormDetailId IS NULL THEN 0 ELSE 1 END AS 'IsFraudClaim'\n    ,\tA.FraudScore AS 'Fraud Score'\n    ,\tC.AmountNet AS 'Claim Amount'\n    ,\tC.DateofAdmit AS 'Claim Date'\n\n    FROM FactClaimDetails C \n    INNER JOIN LnkClaimProcedureDetails L ON L.ClaimFormDetailId = C.ClaimFormDetailId\n    INNER JOIN DimProcedureCodes Cpt ON Cpt.CptCodeId = L.CptCodeId\n    INNER JOIN LnkClaimDiagnosisCodes Licd ON Licd.ClaimFormDetailId = C.ClaimFormDetailId\n    INNER JOIN DimDiagnosisCodes Icd ON Icd.IcdCodeId = Licd.IcdCodeId \n    INNER JOIN DimMemberDetails MDT ON MDt.member_detail_id = C.MemberDetailId\n    INNER JOIN DimMembers M ON M.member_id = MDT.member_id\n    INNER JOIN DimHospitalDetails P ON P.HospitalId = C.HospitalId\n    --INNER JOIN  Provider_NetworkType PN ON PN.ProviderNetworkType_Id = P.Provider_NetworkType\n    LEFT OUTER JOIN DimEmployers EMP ON Emp.EmployerId = MDT.employer_id\n    LEFT OUTER JOIN\n    (\n        SELECT F.ClaimFormDetailId, SUM(L.FraudScore) AS FraudScore\n        FROM FactClaimDetails F \n        INNER JOIN LnkClaimFraudParameter L ON L.ClaimFormDetailId = F.ClaimFormDetailId\n        GROUP BY\n            F.ClaimFormDetailId\n    ) A ON A.ClaimFormDetailId = C.ClaimFormDetailId\n\n\n\tTRUNCATE TABLE dbo.ClaimsSummary\n\n\tINSERT INTO dbo.ClaimsSummary\n\tSELECT * FROM load.ClaimsSummary\n\nEND",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"poolName": "ClaimsSummaryDSQL",
				"databaseName": "ClaimsSummaryDSQL"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}